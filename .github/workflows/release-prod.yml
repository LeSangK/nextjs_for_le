name: Release to Production

on:
  workflow_dispatch:
  push:
    branches:
      - release

jobs:
  create_release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Bump version and create tag
        id: versioning
        run: |
          echo "NEW_TAG=v$(date +'%Y%m%d')" >> $GITHUB_ENV

      - name: Get Previous Tag Name
        run: |

          # Fetch the tag name of the latest release
          PREVIOUS_TAG_NAME=$(curl -H 'Authorization: token ${{ secrets.GITHUB_TOKEN }}' \
                               -H 'Accept: application/vnd.github.v3+json' \
                               https://api.github.com/repos/${{ github.repository }}/releases/latest \
                               | jq -r '.tag_name')

          # Check if a tag was retrieved
          if [ -z "$PREVIOUS_TAG_NAME" ]; then
            echo "No previous tag found."
            # Handle the case where no tag is found, if necessary
          else
            echo "Previous Tag: $PREVIOUS_TAG_NAME"
            # Set the tag name as an environment variable
            echo "PREVIOUS_TAG_NAME=$PREVIOUS_TAG_NAME" >> $GITHUB_ENV
          fi

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: '16' # Specify the Node.js version here

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Configure Vercel Project
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build and Deploy to Vercel
        run: |

          vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

      - name: Create GitHub Release
        run: |

          # Update and publish the release with the JSON-formatted release notes
          curl -X POST \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Accept: application/vnd.github.v3+json" \
            -d "{\"name\": \"${{ env.NEW_TAG }}\", \"tag_name\": \"${{ env.NEW_TAG }}\", \"draft\": false, \"generate_release_notes\": true }" \
            https://api.github.com/repos/${{ github.repository }}/releases
